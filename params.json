{"name":"HDIdx","tagline":"A python package for indexing high-dimensional data.","body":"# HDIdx: Indexing High-Dimensional Data\r\n\r\n## What is `HDIdx`?\r\n\r\n`HDIdx` is a python package for indexing high-dimensional data.\r\nThe current version implements the `Product Quantization` described in [1].\r\n\r\n## Installation\r\n\r\n`HDIdx` can be installed via `pip`:\r\n\r\n```bash\r\n[sudo] pip install hdidx\r\n```\r\n\r\nBy default, `HDIdx` use kmeans algorithm provided by `SciPy`. To be more efficient, you can instll python extensions provided by `OpenCV`, which can be installed via `apt-get` on Ubuntu. For other Linux distributions, e.g. CentOS, you need to compile it from source.\r\n\r\n```bash\r\n[sudo] apt-get install python-opencv\r\n```\r\n\r\n`HDIdx` will detect `OpenCV` automatically and use it if available.\r\n\r\n## Example\r\n\r\nHere is a simple example. See this [notebook](http://nbviewer.ipython.org/gist/wanji/c08693f06ef744feef50) for more examples.\r\n\r\n```python\r\n# import necessary packages\r\n\r\nimport hdidx\r\nimport numpy as np\r\n\r\n# generating sample data\r\nndim = 256     # dimension of features\r\nndb = 10000    # number of dababase items\r\nnqry = 120     # number of queries\r\n\r\nX_db = np.random.random((ndb, ndim)).astype(np.float64)\r\nX_qry = np.random.random((nqry, ndim)).astype(np.float32)\r\n\r\n# create Product Quantization Indexer\r\nidx = hdidx.indexer.PQIndexer()\r\n# build indexer\r\nidx.build({'vals': X_db, 'nsubq': 8})\r\n# add database items to the indexer\r\nidx.add(X_db)\r\n# searching in the database, and return top-100 items for each query\r\nidx.search(X_qry, 100)\r\n```\r\n\r\n## Reference\r\n```\r\n[1] Jegou, Herve, Matthijs Douze, and Cordelia Schmid.\r\n    \"Product quantization for nearest neighbor search.\"\r\n    Pattern Analysis and Machine Intelligence, IEEE Transactions on 33.1 (2011): 117-128.\r\n```\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}